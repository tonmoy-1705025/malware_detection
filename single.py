import csv
import os
from includes.Volatility import Volatility

PREFIX = ".\\volatility\\volatility2.exe -f"
PROFILE = "--profile=Win10x64_14393"

file = 12

#Creating Folder
try:
    os.mkdir('local/'+ str(file))
except:
    pass

fileName = "dumps/"+str(file)+".dmp"
print("Now Working On file =>>" , fileName)

PATH = fileName
folder = str(file)

volatility = Volatility( PREFIX , PROFILE , PATH , folder )

DATA = {}

DATA['file'] = file

#1 Number of handles
plugin = "handles"
no_of_handles = volatility.general_count(plugin , 0)
DATA['1.handles'] = no_of_handles
print(f"1. No of handles = {no_of_handles}\n")

#2 Number of hivelist
plugin = "hivelist"
no_of_hivelist = volatility.general_count(plugin , 0)
DATA['2.hivelist'] = no_of_hivelist
print(f"2. No of hivelist = {no_of_hivelist}\n")

#3 No of dlls_ldrmodules_num
plugin = "ldrmodules"
no_of_ldrmodules = volatility.ldrmodules(plugin , 0)
DATA['3.ldrmodules'] = no_of_ldrmodules
print(f"3. No of ldrmodules = {no_of_ldrmodules}\n")

#4 dlls_ldrmodules_num unique path
type = 'unique_path'
no_of_ldrmodules_unique_path = volatility.ldrmodules_extra(type , -1)
DATA['4.ldrmodules_unique_path'] = no_of_ldrmodules_unique_path
print(f"4. No of ldrmodules_unique_path = {no_of_ldrmodules_unique_path}")


# 5 dlls_ldrmodules_num unique path
type = 'false_count'
no_of_ldrmodules_init_false = volatility.ldrmodules_extra(type, 4)
DATA['5.ldrmodules_init_false'] = no_of_ldrmodules_init_false
print(f"5. No of ldrmodules_ldrmodules_init_false = {no_of_ldrmodules_init_false}")


no_of_ldrmodules_InLoad_false = volatility.ldrmodules_extra(type, 3)
DATA['6.ldrmodules_InLoad_false'] = no_of_ldrmodules_InLoad_false
print(f"6. No of ldrmodules_ldrmodules_InLoad_false = {no_of_ldrmodules_InLoad_false}")


no_of_ldrmodules_InMem_false = volatility.ldrmodules_extra(type, 3)
DATA['7.ldrmodules_InMem_false'] = no_of_ldrmodules_InMem_false
print(f"7. No of ldrmodules_ldrmodules_InMem_false = {no_of_ldrmodules_InMem_false}")


type = 'all_false_count'
no_of_ldrmodules_all_false = volatility.ldrmodules_extra(type, 3)
DATA['8.ldrmodules_all_false'] = no_of_ldrmodules_all_false
print(f"8.No of ldrmodules_ldrmodules_all_false = {no_of_ldrmodules_all_false}")

#2 Number of modules
plugin = "modules"
no_of_modules = volatility.general_count(plugin , 0)
DATA['9.modules'] = no_of_modules
print(f"9.No of modules = {no_of_modules}\n")

#2 Number of Callbacks
plugin = "callbacks"
no_of_callbacks = volatility.general_count(plugin , 0)
DATA['10.callbacks'] = no_of_callbacks
print(f"10.No of callbacks = {no_of_callbacks}\n")

# 11 . Number of privs
plugin = "privs" 
no_of_privs = volatility.privis_enabled_not_default(plugin , 0)
DATA['11.no_of_privs'] = no_of_privs
print(f"11.no_of_privs = {no_of_privs}\n")


# 15 . Number of processes detected by psxview
plugin = "psxview" 
no_of_psxview = volatility.general_count("psxview" , 0)
print(f"15.no_of_psxview = {no_of_psxview}\n")

## 12 NOT FOUND!!!!!!!!!!!!!!!!!!!!!!!!!
DATA['12.Not found'] = ''


# 13.Number of process listing techniques that do not detect at least one process
plugin = "psxview"
no_of_false_column = volatility.psxview_false_column(plugin)
DATA['13.no_of_false_column'] = no_of_false_column
print(f"13.no_of_false_column = {no_of_false_column}\n")

# 14 . Number of processes that are not detected by at least one process listing techniques
plugin = "psxview" 
no_of_false_row = volatility.psxview_false_row(plugin)
DATA['14.no_of_false_row'] = no_of_false_row
print(f"14.no_of_false_row = {no_of_false_row}\n")

### From TOP
DATA['15.no_of_psxview'] = no_of_psxview

# 16 . processes_psxview_pslist_true_num = Number 
plugin = "psxview"
no_of_pslist_true = volatility.psxview_process_true(plugin , 3)
DATA['16.no_of_pslist_true'] = no_of_pslist_true
print(f"16.no_of_pslist_true = {no_of_pslist_true}\n")

# 17 . processes_psxview_psscan_true_num Number of processes detected by psscan 
plugin = "psxview" 
no_of_psscan_true = volatility.psxview_process_true(plugin , 4)
DATA['16.no_of_psscan_true'] = no_of_psscan_true
print(f"16.no_of_psscan_true = {no_of_psscan_true}\n")


#### for help ####
help = volatility.general_count("svcscan" , 0)
# 18 services_svcscan_num = Number of services Integer
# 19 services_svcscan_running_num =  Number of running services Integer
# 20 services_svcscan_stopped_num = Number of stopped services
plugin = "svcscan"
scan_data = volatility.svcscan_all(plugin)
DATA['18. services_svcscan_num'] = scan_data[0]
DATA['19. services_svcscan_running_num'] = scan_data[1]
DATA['20. services_svcscan_stopped_num'] = scan_data[2]
print(f"{plugin}" , scan_data )


# 21 dlls_dlllist_unique_paths_num Number of dlls
help = volatility.general_count("dlllist" , 0)
plugin = "dlllist"
no_of_dlllist_qnique_path = volatility.dlllist_unique_path(plugin)
DATA['21. no_of_dlllist_qnique_path'] = no_of_dlllist_qnique_path
print(f"21.no_of_dlllist_qnique_path = {no_of_dlllist_qnique_path}\n")


# 22. mutex_mutantscan_num Number of mutexes 
plugin = "mutantscan"
no_of_mutantscan = volatility.general_count(plugin, 0)
DATA['22.no_of_mutantscan'] = no_of_mutantscan
print(f"22.no_of_mutantscan = {no_of_mutantscan}\n")


# 23. threads_thrdscan_num Number of threads
plugin = "thrdscan"
no_of_thrdscan = volatility.general_count(plugin, 0)
DATA['23.no_of_thrdscan'] = no_of_thrdscan
print(f"23.no_of_thrdscan = {no_of_thrdscan}\n")


# 24 pslist Number of processes 
plugin = "pslist"
no_of_pslist = volatility.general_count(plugin, 0)
DATA['24.no_of_pslist'] = no_of_pslist
print(f"24.no_of_pslist = {no_of_pslist}\n")

csvData = []
for i in DATA:
    print(i , DATA[i])
    csvData.append(DATA[i])

with open("data.csv", mode="a+", newline='') as file:
    writer = csv.writer(file)
    writer.writerow(csvData)

